{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/TODO-App-With-Auth-and-Backend/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport Todos from \"./Todos\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport firebase from \"firebase\";\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sighInWithGoogle = () => auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n\nconst SignIn = () => {\n  _s();\n\n  const [user, setUser] = useState(\"\"); // eslint-disable-next-line\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disables\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-exist\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignUp: handleSignUp,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError,\n      sighInWithGoogle: sighInWithGoogle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"X2LWnmbCAK9PyM+1Me34tbBRU2w=\");\n\n_c = SignIn;\n\nconst App = () => {\n  _s2();\n\n  const [user] = useAuthState(auth);\n  return user ? /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 29\n  }, this);\n};\n\n_s2(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/TODO-App-With-Auth-and-Backend/src/App.js"],"names":["Todos","useAuthState","auth","firebase","React","useState","useEffect","Login","sighInWithGoogle","signInWithPopup","GoogleAuthProvider","SignIn","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearInputs","clearErrors","handleLogin","signInWithEmailAndPassword","catch","err","code","message","handleSignUp","createUserWithEmailAndPassword","authListener","onAuthStateChanged","App"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Todos from \"./Todos\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport firebase from \"firebase\";\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\n\nconst sighInWithGoogle = () =>\n  auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n\nconst SignIn = () => {\n  const [user, setUser] = useState(\"\"); // eslint-disable-next-line\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disables\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-exist\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Login\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        sighInWithGoogle={sighInWithGoogle}\n      />\n    </div>\n  );\n};\n\nconst App = () => {\n  const [user] = useAuthState(auth);\n\n  return user ? <Todos /> : <SignIn />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}